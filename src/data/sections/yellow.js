import { SECTION_DATA_COLORS } from "@/config/colors";
export const yellowBeltContent = {
  // Belt configuration
  belt: "yellow",
  beltDisplayName: "jaune",
  beltBadge: "üü°",
  description: "Op√©rations de base - Cr√©er, Lire, Modifier, Supprimer",
  topics: ["INSERT", "SELECT", "UPDATE", "DELETE", "WHERE"],
  colors: SECTION_DATA_COLORS.yellow,

  // Content sections
  header: {
    title: "CRUD - Op√©rations de Base",
    description: "Ma√Ætrisez les op√©rations Cr√©er, Lire, Modifier, Supprimer",
    tag: "Ceinture Jaune",
  },
  pageDescription: {
    title: "Manipulez Vos Donn√©es avec les Op√©rations CRUD",
    content:
      "La ceinture jaune vous apprend les quatre op√©rations fondamentales de manipulation de donn√©es : CREATE (INSERT), READ (SELECT), UPDATE et DELETE. Ces op√©rations forment l'√©pine dorsale de toute interaction avec une base de donn√©es. Vous apprendrez √† ins√©rer de nouvelles donn√©es, r√©cup√©rer des informations, mettre √† jour des enregistrements existants et supprimer des donn√©es obsol√®tes.",
  },
  accordions: [
    {
      title: "INSERT - Ajouter des Donn√©es",
      content:
        "Ins√©rez de nouvelles donn√©es dans vos tables avec diff√©rentes m√©thodes.",
      sqlCode: `-- Insertion simple
INSERT INTO users (name, email, age) 
VALUES ('Alice Dupont', 'alice@email.com', 28);

-- Insertion multiple
INSERT INTO users (name, email, age) VALUES 
('Bob Martin', 'bob@email.com', 32),
('Claire Durand', 'claire@email.com', 25),
('David Moreau', 'david@email.com', 45);

-- Insertion avec toutes les colonnes
INSERT INTO users VALUES 
(5, 'Emma Bernard', 'emma@email.com', 30, '2024-01-15 10:30:00');

-- Insertion s√©lective (colonnes avec DEFAULT)
INSERT INTO users (name, email) 
VALUES ('Fran√ßois Petit', 'francois@email.com');`,
      sqlResult: `1 ligne ins√©r√©e
3 lignes ins√©r√©es
1 ligne ins√©r√©e
1 ligne ins√©r√©e`,
      description:
        "INSERT vous permet d'ajouter de nouvelles donn√©es dans vos tables de diff√©rentes mani√®res.",
    },
    {
      title: "SELECT - Lire des Donn√©es",
      content:
        "R√©cup√©rez des donn√©es avec des requ√™tes SELECT de base √† avanc√©es.",
      sqlCode: `-- S√©lection de toutes les colonnes
SELECT * FROM users;

-- S√©lection de colonnes sp√©cifiques
SELECT name, email FROM users;

-- S√©lection avec alias
SELECT 
    name AS nom_complet,
    email AS adresse_email,
    age AS √¢ge
FROM users;

-- S√©lection avec calculs
SELECT 
    name,
    age,
    age + 10 AS age_dans_10_ans,
    CASE 
        WHEN age < 30 THEN 'Jeune'
        WHEN age < 50 THEN 'Adulte'
        ELSE 'Senior'
    END AS cat√©gorie
FROM users;`,
      sqlResult: `5 lignes retourn√©es
Alice Dupont | alice@email.com
Bob Martin | bob@email.com
...`,
      description:
        "SELECT est votre outil principal pour extraire et transformer des informations de votre base de donn√©es.",
    },
    {
      title: "UPDATE - Modifier des Donn√©es",
      content:
        "Mettez √† jour des enregistrements existants avec pr√©cision et s√©curit√©.",
      sqlCode: `-- Mise √† jour simple
UPDATE users 
SET age = 29 
WHERE name = 'Alice Dupont';

-- Mise √† jour multiple colonnes
UPDATE users 
SET 
    email = 'nouveau.email@domain.com',
    age = age + 1
WHERE id = 1;

-- Mise √† jour conditionnelle
UPDATE users 
SET age = age + 1 
WHERE age < 50;

-- Mise √† jour avec calculs
UPDATE products 
SET 
    price = price * 1.1,
    updated_at = CURRENT_TIMESTAMP
WHERE category = 'electronics';

-- Attention : UPDATE sans WHERE modifie TOUTES les lignes!
-- UPDATE users SET age = 25;  -- DANGEREUX!`,
      sqlResult: `1 ligne mise √† jour
1 ligne mise √† jour
3 lignes mises √† jour
25 lignes mises √† jour`,
      description:
        "UPDATE modifie des donn√©es existantes. Utilisez toujours WHERE sauf si vous voulez vraiment modifier toutes les lignes.",
    },
    {
      title: "DELETE - Supprimer des Donn√©es",
      content:
        "Supprimez des enregistrements de mani√®re s√©lective et s√©curis√©e.",
      sqlCode: `-- Suppression conditionnelle
DELETE FROM users 
WHERE age > 65;

-- Suppression par ID
DELETE FROM users 
WHERE id = 3;

-- Suppression avec conditions multiples
DELETE FROM orders 
WHERE status = 'cancelled' 
AND created_at < '2023-01-01';

-- Suppression bas√©e sur une sous-requ√™te
DELETE FROM users 
WHERE id IN (
    SELECT user_id FROM inactive_accounts
);

-- Attention : DELETE sans WHERE supprime TOUTES les lignes!
-- DELETE FROM users;  -- TR√àS DANGEREUX!

-- Alternative s√ªre : vider une table
TRUNCATE TABLE temp_data;`,
      sqlResult: `2 lignes supprim√©es
1 ligne supprim√©e
45 lignes supprim√©es
8 lignes supprim√©es`,
      description:
        "DELETE supprime d√©finitivement des donn√©es. Toujours utiliser WHERE sauf pour vider compl√®tement une table.",
    },
    {
      title: "Transactions - S√©curit√© des Op√©rations",
      content:
        "Groupez vos op√©rations CRUD dans des transactions pour maintenir la coh√©rence.",
      sqlCode: `-- Transaction simple
BEGIN TRANSACTION;

INSERT INTO users (name, email, age) 
VALUES ('Test User', 'test@email.com', 25);

UPDATE users 
SET age = 26 
WHERE email = 'test@email.com';

-- Valider les changements
COMMIT;

-- Transaction avec gestion d'erreur
BEGIN TRANSACTION;

UPDATE accounts SET balance = balance - 100 WHERE id = 1;
UPDATE accounts SET balance = balance + 100 WHERE id = 2;

-- Si tout va bien
COMMIT;

-- En cas de probl√®me
-- ROLLBACK;`,
      description:
        "Les transactions garantissent que vos op√©rations multiples sont trait√©es comme un bloc atomique.",
    },
    {
      title: "Requ√™tes avec RETURNING/OUTPUT",
      content:
        "R√©cup√©rez les donn√©es modifi√©es directement apr√®s vos op√©rations.",
      sqlCode: `-- INSERT avec RETURNING (PostgreSQL/SQLite)
INSERT INTO users (name, email, age) 
VALUES ('Nouveau User', 'nouveau@email.com', 27)
RETURNING id, name, created_at;

-- UPDATE avec RETURNING
UPDATE users 
SET age = age + 1 
WHERE name LIKE 'Alice%'
RETURNING id, name, age;

-- DELETE avec RETURNING
DELETE FROM users 
WHERE age > 70
RETURNING id, name, email;

-- Ins√©rer et r√©cup√©rer l'ID g√©n√©r√©
INSERT INTO products (name, price) 
VALUES ('Nouveau Produit', 29.99)
RETURNING id;`,
      sqlResult: `ID: 6, Name: Nouveau User, Created: 2024-01-15 10:45:30
ID: 1, Name: Alice Dupont, Age: 30
2 utilisateurs supprim√©s
Nouveau produit ID: 156`,
      description:
        "RETURNING vous permet de r√©cup√©rer imm√©diatement les donn√©es affect√©es par vos op√©rations.",
    },
  ],
};
